// Helper functions pentru gestionare dinamicƒÉ loca»õii bazat pe tipul de organiza»õie

export type LocationType = 'camin' | 'gradinita' | 'spital' | 'hotel';

interface LocationConfig {
  singularName: string;
  pluralName: string;
  personSingular: string;
  personPlural: string;
  addPersonLabel: string;
  representantLabel: string;
  detailsPath: string;
  addPath: string;
  addPersonPath: string;
  icon: string;
}

const locationConfigs: Record<LocationType, LocationConfig> = {
  camin: {
    singularName: 'CƒÉmin',
    pluralName: 'CƒÉmine',
    personSingular: 'Rezident',
    personPlural: 'Reziden»õi',
    addPersonLabel: 'AdaugƒÉ Rezident',
    representantLabel: 'Reprezentant CƒÉmin',
    detailsPath: '/camine',
    addPath: '/camine/add',
    addPersonPath: '/residents/add',
    icon: 'üè•'
  },
  gradinita: {
    singularName: 'GrƒÉdini»õƒÉ',
    pluralName: 'GrƒÉdini»õe',
    personSingular: 'Copil',
    personPlural: 'Copii',
    addPersonLabel: 'AdaugƒÉ Copil',
    representantLabel: 'Director/Manager GrƒÉdini»õƒÉ',
    detailsPath: '/gradinite',
    addPath: '/gradinite/add',
    addPersonPath: '/children/add',
    icon: 'üé®'
  },
  spital: {
    singularName: 'ClinicƒÉ',
    pluralName: 'Clinici',
    personSingular: 'Pacient',
    personPlural: 'Pacien»õi',
    addPersonLabel: 'AdaugƒÉ Pacient',
    representantLabel: 'Manager ClinicƒÉ',
    detailsPath: '/clinici',
    addPath: '/clinici/add',
    addPersonPath: '/patients/add',
    icon: '‚ù§Ô∏è'
  },
  hotel: {
    singularName: 'Hotel',
    pluralName: 'Hoteluri',
    personSingular: 'Rezervare',
    personPlural: 'RezervƒÉri',
    addPersonLabel: 'NouƒÉ Rezervare',
    representantLabel: 'Manager Hotel',
    detailsPath: '/hoteluri',
    addPath: '/hoteluri/add',
    addPersonPath: '/reservations/add',
    icon: 'üè®'
  }
};

// Ob»õine configura»õia pentru un tip de loca»õie
export function getLocationConfig(type: LocationType): LocationConfig {
  return locationConfigs[type] || locationConfigs.camin;
}

// Ob»õine URL-ul pentru detalii loca»õie
export function getLocationDetailsUrl(type: LocationType, locationId: string): string {
  const config = getLocationConfig(type);
  return `${config.detailsPath}/${locationId}`;
}

// Ob»õine URL-ul pentru adƒÉugare loca»õie
export function getAddLocationUrl(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.addPath;
}

// Ob»õine URL-ul pentru adƒÉugare persoanƒÉ (rezident/copil/pacient/rezervare)
export function getAddPersonUrl(type: LocationType, locationId: string): string {
  const config = getLocationConfig(type);
  return `${config.addPersonPath}?locationId=${locationId}`;
}

// Ob»õine label-ul pentru butonul de adƒÉugare persoanƒÉ
export function getAddPersonLabel(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.addPersonLabel;
}

// Ob»õine numele singular al loca»õiei
export function getLocationSingularName(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.singularName;
}

// Ob»õine numele plural al loca»õiei
export function getLocationPluralName(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.pluralName;
}

// Ob»õine numele singular al persoanei (rezident/copil/pacient)
export function getPersonSingularName(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.personSingular;
}

// Ob»õine numele plural al persoanei (reziden»õi/copii/pacien»õi)
export function getPersonPluralName(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.personPlural;
}

// Ob»õine label-ul pentru reprezentant
export function getRepresentantLabel(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.representantLabel;
}

// Ob»õine iconul pentru tipul de loca»õie
export function getLocationIcon(type: LocationType): string {
  const config = getLocationConfig(type);
  return config.icon;
}
